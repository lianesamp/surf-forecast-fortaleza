import { useState, useEffect } from 'react';
import { getMarineWeather } from "./services/api";
import ForecastCard from './components/ForecastCard';
import { calcularResumoDoDia } from "./utils/calculateSummary";
import { degreesToCardinal } from "./utils/convertDirection";
import { isSurgeSeason, averageSwellPeriod, isGoodSwell } from "./utils/surfSeasonUtils";

import './App.css';

const ExplanationPanel = () => (
  <div className="bg-blue-50 p-4 rounded-md mb-6 max-w-3xl mx-auto text-gray-700">
    <h3 className="text-lg font-semibold mb-3 text-blue-700">What do the parameters mean?</h3>
    <ul className="list-disc list-inside space-y-1 text-sm">
      <li><strong>Wave:</strong> The wave direction, indicating where the waves are coming from.</li>
      <li><strong>Wind/Waves:</strong> The direction of waves generated by local wind, which affect surf quality.</li>
      <li><strong>Swell Height:</strong> Average height of swell waves, which are waves generated by distant storms.</li>
      <li><strong>Swell Period:</strong> Time between waves; a longer period means more organized and better waves for surfing.</li>
    </ul>
  </div>
);

function App() {
  const [data, setData] = useState(null);
  const [dailySummary, setDailySummary] = useState(null);

  useEffect(() => {
    async function fetchData() {
      const marineData = await getMarineWeather(-3.71722, -38.5433);
      setData(marineData);

      const summary = calcularResumoDoDia(marineData);
      setDailySummary(summary);
    }

    fetchData();
  }, []);

  const today = new Date();
  const inSeason = isSurgeSeason(today);

  const averagePeriod = data ? averageSwellPeriod(data.hourly.swell_wave_period) : null;
  const goodConditions = averagePeriod ? isGoodSwell(averagePeriod) : false;

  function renderSurfAdvice() {
    if (!inSeason) {
      return (
        <p className="max-w-6xl mx-auto px-4 py-4 bg-yellow-100 border border-yellow-400 text-yellow-800 rounded-md text-center mb-8 font-semibold">
          We are currently <strong>out of the swell season</strong> in Fortaleza (October to April).
          Conditions may not be ideal for surfing.
        </p>
      );
    }
    if (!data) {
      return null; 
    }
    if (goodConditions) {
      return (
        <p className="max-w-6xl mx-auto px-4 py-4 bg-green-100 border border-green-400 text-green-800 rounded-md text-center mb-8 font-semibold">
          Great conditions for surfing today! Enjoy the waves.
        </p>
      );
    }
    return (
      <p className="max-w-6xl mx-auto px-4 py-4 bg-red-100 border border-red-400 text-red-800 rounded-md text-center mb-8 font-semibold">
        Conditions are not ideal for surfing today. Consider waiting for better days.
      </p>
    );
  }

  return (
    <div className="min-h-screen bg-sky-100 p-6">
      <header className="max-w-6xl mx-auto px-4 py-6 text-center">
        <h1 className="text-3xl font-extrabold mb-1">
          Surf Forecast — Fortaleza
        </h1>
        <p className="text-sm text-gray-600">
          Forecast from 5AM to 6PM on {today.toLocaleDateString("en-US", { day: '2-digit', month: '2-digit', year: 'numeric' })}
        </p>
      </header>

      <ExplanationPanel />

      {dailySummary && (
        <section className="max-w-6xl mx-auto px-4 py-4 bg-white rounded-lg shadow-md mb-8">
          <h2 className="text-xl font-semibold mb-3 text-blue-700">
            Summary of Conditions for Today
          </h2>
          <ul className="text-gray-700 space-y-2 text-sm">
            <li>
              <strong>Average Swell Height:</strong>{" "}
              {dailySummary.swellHeightAvg.toFixed(2)} m
            </li>
            <li>
              <strong>Average Swell Period:</strong>{" "}
              {dailySummary.swellPeriodAvg.toFixed(1)} s
            </li>
            <li>
              <strong>Predominant Wave Direction:</strong>{" "}
              {dailySummary.waveDirectionModa}° (
              {degreesToCardinal(dailySummary.waveDirectionModa)})
            </li>
            <li>
              <strong>Predominant Wind/Wave Direction:</strong>{" "}
              {dailySummary.windDirectionModa}° (
              {degreesToCardinal(dailySummary.windDirectionModa)})
            </li>
            <li>
              <strong>Average Sea Temperature:</strong>{" "}
              {dailySummary.seaTempAvg.toFixed(1)} °C
            </li>
          </ul>
        </section>
      )}

      {renderSurfAdvice()}

      {data ? (
        <div className="max-w-6xl mx-auto px-4 py-8 grid gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
          {data.hourly.time.slice(5, 19).map((t, idx) => (
            <ForecastCard
              key={t}
              time={t}
              waveDirection={data.hourly.wave_direction[idx + 5]}
              windWaveDirection={data.hourly.wind_wave_direction[idx + 5]}
              swellHeight={data.hourly.swell_wave_height[idx + 5]}
              swellPeriod={data.hourly.swell_wave_period[idx + 5]}
            />
          ))}
        </div>
      ) : (
        <p>Loading...</p>
      )}
    </div>
  );
}

export default App;
